#클라이언트는 요청을 보내는 주체
- 크롬, 사파리, 엣지, 파이어폭스 등과 같은 웹 브라우저


#서버는 네트워크를 통해 클라이언트에 정보 혹은 서비스를 제공하는 컴퓨터(프로그램)
 - 웹페이지, 웹사이트, 앱을 저장한 컴퓨터
 -웹 서버 앱을 통해 만들어진 앱
 

#웹 프로그래밍이란 = HTTP 프로토콜을 통신하는 클라이언트와 서버를 개발하는 것

1.브라우저에서 URL 입력, 해석 -> 2.HTTP를 서버에 요청 -> 3.서버에서 요청확인
->4.HTTP응답(HTML & 200코드)를 브라우저에 전송 ->5. 랜더링을통해 사용자에게 제공


<HTTP 요청>
메서드 METHOD - 서버가 수행해야할 동작 ex) get(받아와), post(보내), delete
URL 주소 
헤더 HEADER - 브라우저 정보, 언어 등 여러정보가 담김
본문 BODY - id/pw, 새글 , 내용 ...(없어도 됨)

<HTTP 응답>
상태코드 - 요청의 성공여부 ( 200 ok) 오류나면 왜 오류났는지 404 등등
헤더 HEADER
본문 BODY - html코드 등의 파일 

웹브라우저와 서버는 리소스를 주고 받는 형식을 미리 약속(HTTP)로 정해두고
이에 따라 동작!

사용자의 요청을 잘 반영 - 자바스크립트
적절한 레이아웃과 보기 좋은 디자인 - CSS
웹 콘텐츠를 구조화 - HTML

<HTML>
-반복문, 조건문 등 연상이 가능한 프로그래밍 언어는 아님
-웹페이지에서 콘텐츠의 구조를 표현하귀 위함
- 컨텐츠의 서로 다른부분들을 태그해서 감싸거나 해서 다른 형식으로 보이게함.
-여는 태그와 닫는 태그로 이루어져 있음 그 두개사이의 내용은 컨텐트라고 함
-이미지 같은경우는 닫는 태그가 없기도 하는데 끝에 /넣어줘도 되고 안넣어줘도
 됨. 이런 걸 '빈요소' 라고한다!
- class 속성은 가독성향상, 디자인 추가 등.. 추가적인 정보를 제공!
- HTML은 다른 걸 담을 수 있는 그릇이라고도 할 수있음
-★태그 속 태그 = 부모/자식 관계 가능
-body 내용이 브라우저에 출력되는 내용

<CSS>
-스타일 적용 
-Selector(선택자) : 태그,클래스,id 선택자로 나뉨
 1.태그선택자-가장간단, HTML요소의 이름을 직접지칭함, 해당 요소 모두 적용댐
 2.클래스선택자-주어진 class의 어트리뷰트를 포함하는 특정 부분을 수정하기 위해
 3.ID선택자- 클래스선택자와 유사, 하나의 html요소에만 사용가능(클래스선택자와   의 차이) 사용할 선택자 id앞에 #을붙이면 됨
 #속성이 HTML에서 ATTRIBUTE지만 CSS에선 PROPERTY(정해진 속성만 사용가능함 CSS에선) ex)쓰고싶은색깔이 있더라도 정해진 색깔 범위안에서만 사용가능
 # 선언은 ; 으로 !
작성된 하나의 구문이 룰셋!
-시각적으로 꾸며주는 역할
-개발자들이 서로 다른 부분을 개발 가능, 유지보수 쉬움,검색 엔진 등 기계가 정보를 이해하기 쉬움

<Javascript>
- 웹 페이지를 동적으로 만드는 데에 사용되는 프로그래밍 언어
- 모든 상호작용은 서버와의 통신을 통해서만 가능 -> 자바스크립트로 해결!
  ex) 로그인 기능...
- 브라우저에서 정보를 좀더 복잡하게 표시가능해줌(동영상, 실시간 검색어 등..)
- 사물인터넷에서도 사용 가능!


 


